<metadata
  theme-color="indigo"
  keywords="inet, Yves Lafont"
 />

<front-cover>
  "Interaction Nets", Yves Lafont, 1990.
</front-cover>

<cloze>
  Interaction net (iNet) is a computation model
  based on <blank>(indirected) graph</blank>.
</cloze>

<question>
  What is computation?

  <answer>
    Computation is directed changes.
  </answer>
</question>

<question>
  What is a computation model?

  <answer>
    A computation model is a group of rules about how to change.
  </answer>
</question>

<question>
  What is a program?

  <answer>
    A program is an initial state of a computation model,
    ready to change.
  </answer>
</question>

<question>
  What is a net of interaction nets?

  <answer>
    A net is an undirected graph,
    where each node has finite list of input ports,
    and a finite list of output ports.

    A connection between nodes must go through ports.
  </answer>
</question>

<question>
  What is the "interaction" of interaction nets?

  <answer>
    Interaction is graph rewriting based on rules
    which have the following constraints:

    1. linearity

    2. binary interaction

    3. no ambiguity

    4. optimisation
  </answer>
</question>

<question>
  What is the "linearity" constraint of interaction rules?

  <answer>
    Inside a rule, each variable port occurs exactly twice,
    once in the left side of the rule and
.    once in the right side of the rule.
  </answer>
</question>

<question>
  What is the "binary interaction" constraint of interaction rules?

  <answer>
    Each node has one principal port.

    Nodes interact through their principal port only.

    An edge connecting two principal ports is called alive or active.
  </answer>
</question>

<question>
  What is the "no ambiguity" constraint of interaction rules?

  <answer>
    There is at most one rule for each pair of distinct nodes S, Z,
    and no rule for the node with itself S, S.
  </answer>
</question>

<question>
  What is the "strong confluence" of rewriting system?

  <answer>
    Strong confluence of a rewriting system means:

    If N reduces in one step to P and Q,
    with P != Q, then P and Q reduce
    in one step to a common R.

    Strong confluence means that
    the relative order of concurrent
    reductions is completely irrelevant.
  </answer>
</question>

<question>
  Prove interaction has strong confluence.

  <answer>
    By "binary interaction" and "no ambiguity",
    rules apply to disjoint pairs of nodes,
    and cannot interfere with each other.

    By "linearity" interactions are purely local
    and can be performed concurrently.
  </answer>
</question>

<question>
  What is the "optimisation" constraint of interaction rules?

  <answer>
    The right side of a rule contains no active edge.
  </answer>
</question>

<question>
  Does the "optimisation" constraint of interaction rules
  ensures termination?

  <answer>
    No.

    The simplest counterexample is the turnstile.

    TODO code of turnstile
  </answer>
</question>

<question>
  What is a well typed net?

  <answer>
    A net is well typed if inputs are connected to
    outputs of the matching type.
  </answer>
</question>

<question>
  What is a well typed rule?

  <answer>
    A rule is well typed if:

    (1) In the left side of the rule,
    one principal is input and another is output,
    and they have matching types.

    (2) The right side of the rule is well typed,
    where the types of variable ports
    are given by the left side.
  </answer>
</question>

<question>
  What is the "completeness" constraint of well typed interaction rules?

  <answer>
    There is a rule for each pair of matching nodes.

    Thus all active edge can be reduced.
  </answer>
</question>

<cloze>
  A node is called constructor if its principal port
  is an <blank>output</blank> port.

  A node is called eliminator if its principal port
  is an <blank>input</blank> port.
</cloze>

<question>
  Let N be a net with some free ports.

  If N is well typed, finite and nonempty.

  What is the characteristic of N being irreducible?

  <answer>
    And if N is irreducible,
    then starting from any node,
    you can follow principal ports
    until you reach a free ports
    or you loop!
  </answer>
</question>
