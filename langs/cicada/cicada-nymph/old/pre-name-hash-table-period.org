* 題解
  - 早期匯編代碼中
    沒有 name-hash-table 的艱難時期

* 討論 <2015-06-16>
  - k ::
       我發現此時設計的很多機制都需要改進
       因爲 name-hash-table 是如此重要
       以至於 實現它之後
       對系統的理解也變化
  - x ::
       語法擴展機制 就是在 name-hash-table 之前設計的
       比如
       每次用一個謂詞來做語法判斷
       雖然靈活
       但是很多時候判斷都是平凡的
       比如
       目前如果 謂詞是匿名函數的話 <rule> sub 就沒法用了
       因爲 rule,add 時的匿名函數是不同的
       這些都成問題
  - k ::
       我們可以通過豐富下面的數據結構
       來把平凡謂詞做特殊處理
       | rule | predicate |
       |      | function  |
       比如
       | rule | flag      |
       |      | name      |
       |      | predicate |
       |      | function  |
  - x ::
       這不是好的解法
       這是性狀的堆砌
  - k ::
       那麼
       按你之前的說法
       問題出現在 jo 的等詞上
       這個問題是沒法解決的
       之所以有問題
       是因爲 使用了匿名函數
       之所以 使用匿名函數
       是因爲很多等詞都是平凡的
       如果按照我的解法
       所有在 rule 中出現的等詞都不應該是匿名的
       因爲沒有必要是匿名的 畢竟它們不是平凡的
  - x ::
       總之我覺得你的解法不好
       我們把這個問題留下以後在討論吧
  - k ::
       並且
       好像除了這個機制之外
       就再也沒有 name-hash-table 之前實現的機制了
