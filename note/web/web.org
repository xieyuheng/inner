#+title: web

* (2012) the tangled web -- a guide to securing modern web applications

*** [note]

    - the protocols (加密)

    - document formats (嚴格)
      - dsssl

    - programming languages (靜態類型)
      - dependent-type
      - function as proof

*** chapter 2: it starts with a url

*** chapter 3: hypertext transfer protocol

*** chapter 4: hypertext markup language

*** chapter 5: cascading style sheets

*** chapter 6: browser-side scripts

*** chapter 7: non-html document types

*** chapter 8: content rendering with browser plug-ins

* seven web frameworks

*** intro

    - ><

*** Sinatra -- ruby

*** CanJS

*** AngularJS

*** Ring -- clojure

*** >< Webmachine -- erlang

    - ><

*** Yesod -- haskell

*** Immutant -- clojure

* flask

*** getting start

***** route

      - relation between url and view function
        @app.route(<path>)

***** view

      - view functions are registered by @app.route(<path>)
        Request is passed to the function
        by a dynamicly scoped variable

***** Request

      - a dynamicly scoped variable
        flask.request
        can be used by view funciton

      - fields of Request :
        ><><><

      - methods of Request :
        ><><><

***** Response

      - a view function creates and returns a Response object

      - fields of Response :
        ><><><

      - methods of Response :
        ><><><

      - sugars for returning Response object :

        1. If a response object is returned
           it’s directly returned from the view.

           - x -
             if the explicit syntax is not over complicated
             I will always use the explicit syntax.

        2. If it’s a string,
           a response object is created
           with that data and the default parameters.

        3. if (response, status, headers)
           or (response, headers) is returned,
           The status value will override the status code
           and headers can be a list or dictionary of additional header values.

        4. If none of that works,
           Flask will assume the return value is a valid WSGI application
           and convert that into a response object.

***** Session -- wraped cookie

*** API

***** Application object

      - such an object is used to register all informations,
        the name of which must be module or package name.

*** (2014) flask-web-development

    - ><

*** instant-flask-web-development

*** (py2) building-web-applications-with-flask

*** building-web-applications-with-python-and-neo4j

*** (py2) flask-blueprints

*** (py2) flask-by-example

*** (2015) (py2) learning-flask-framework
