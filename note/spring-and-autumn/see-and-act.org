- 在實現 cicada-vm-in-coffee 的過程中
  我發現關於
  type as sequent
  body as sequent-list
  jojo as antecedent & succedent
  還有 uni 時如何處理遞歸函數
  我都沒能給出好的設計

- 當需要實現這些東西的時候
  實現行爲本身的緊迫性 [see and act]
  要求邏輯必須正確
  在以前的 cicada-nymph 中
  我能感到語言在幫助我理清邏輯
  但是在 js 中並沒有這種感覺

- 果真如此嗎
  可能不是真的
  可能任何語言都有這種實現的緊迫性

- 爲什麼如此
  可能是 函數複合 相較 函數作用 的優越性

- 應該怎麼辦
  嘗試發現寫 js 代碼的更好的方式
  以重現實現的緊迫性

-----------------------

- 我還體會到一個重點
  就是去瞭解所使用的語言的特點
  然後使用更適合這個語言的方式來編程
  而不是總想把語言異變成自己滿意的形態

- 瞭解一個語言的典型應用
  能夠幫助瞭解這個語言的重要特點

- 比如 scheme 的主要應用是教學
  這也取決於它的主要使用者
  每個好的利用 scheme 做的教學都會把其實現原理講透徹
  這就要求語言的極簡
  - 當然還有它作爲動態語言的一些特點
  - 還有因爲直接寫語法解析樹而獲得的正規語法擴展系統
  這樣
  scheme 就很適合把你的一些實驗性的想法講授給他人
  也仿照已有的經典教學實例
  把你所想要講授的東西做到極簡
