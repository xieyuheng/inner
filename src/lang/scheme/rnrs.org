#+title: rnrs

* r5rs

*** introduction

*** 1 overview of scheme

***** 1.1 semantics

***** 1.2 syntax

***** 1.3 notation and terminology

*** 2 lexical conventions

***** 2.1 identifiers

***** 2.2 whitespace and comments

***** 2.3 other notations

*** 3 basic concepts

***** 3.1 variables, syntactic keywords, and regions

***** 3.2 disjointness of types

***** 3.3 external representations

***** 3.4 storage model

***** 3.5 proper tail recursion

*** 4 expressions

***** 4.1 primitive expression types

***** 4.2 derived expression types

***** 4.3 macros

*** 5 program structure

***** 5.1 programs

***** 5.2 definitions

***** 5.3 syntax definitions

*** 6 standard procedures

***** 6.1 equivalence predicates

***** 6.2 numbers

***** 6.3 other data types

***** 6.4 control features

***** 6.5 eval

***** 6.6 input and output

*** 7 formal syntax and semantics

***** 7.1 formal syntax

***** 7.2 formal semantics

***** 7.3 derived expression types

* r6rs

*** r6rs

***** introduction

***** description of the language

***** 1 overview of scheme

******* 1.1 basic types

******* 1.2 expressions

******* 1.3 variables and binding

******* 1.4 definitions

******* 1.5 forms

******* 1.6 procedures

******* 1.7 procedure calls and syntactic keywords

******* 1.8 assignment

******* 1.9 derived forms and macros

******* 1.10 syntactic data and datum values

******* 1.11 continuations

******* 1.12 libraries

******* 1.13 top-level programs

***** 2 requirement levels

***** 3 numbers

******* 3.1 numerical tower

******* 3.2 exactness

******* 3.3 fixnums and flonums

******* 3.4 implementation requirements

******* 3.5 infinities and nans

******* 3.6 distinguished -0.0

***** 4 lexical syntax and datum syntax

******* 4.1 notation

******* 4.2 lexical syntax

******* 4.3 datum syntax

***** 5 semantic concepts

******* 5.1 programs and libraries

******* 5.2 variables, keywords, and regions

******* 5.3 exceptional situations

******* 5.4 argument checking

******* 5.5 syntax violations

******* 5.6 safety

******* 5.7 boolean values

******* 5.8 multiple return values

******* 5.9 unspecified behavior

******* 5.10 storage model

******* 5.11 proper tail recursion

******* 5.12 dynamic extent and the dynamic environment

***** 6 entry format

******* 6.1 syntax entries

******* 6.2 procedure entries

******* 6.3 implementation responsibilities

******* 6.4 other kinds of entries

******* 6.5 equivalent entries

******* 6.6 evaluation examples

******* 6.7 naming conventions

***** 7 libraries

******* 7.1 library form

******* 7.2 import and export levels

******* 7.3 examples

***** 8 top-level programs

******* 8.1 top-level program syntax

******* 8.2 top-level program semantics

***** 9 primitive syntax

******* 9.1 primitive expression types

******* 9.2 macros

***** 10 expansion process

***** 11 base library

******* 11.1 base types

******* 11.2 definitions

******* 11.3 bodies

******* 11.4 expressions

******* 11.5 equivalence predicates

******* 11.6 procedure predicate

******* 11.7 arithmetic

******* 11.8 booleans

******* 11.9 pairs and lists

******* 11.10 symbols

******* 11.11 characters

******* 11.12 strings

******* 11.13 vectors

******* 11.14 errors and violations

******* 11.15 control features

******* 11.16 iteration

******* 11.17 quasiquotation

******* 11.18 binding constructs for syntactic keywords

******* 11.19 macro transformers

******* 11.20 tail calls and tail contexts

***** appendices

******* a formal semantics

******* a.1 background

******* a.2 grammar

******* a.3 quote

******* a.4 multiple values

******* a.5 exceptions

******* a.6 arithmetic and basic forms

******* a.7 lists

******* a.8 eqv

******* a.9 procedures and application

******* a.10 call/cc and dynamic wind

******* a.11 letrec

******* a.12 underspecification

*** r6rs-lib

*** r6rs-app

*** r6rs-rationale

* r7rs

*** introduction

*** 1 overview of scheme

***** 1.1 semantics

***** 1.2 syntax

***** 1.3 notation and terminology

*** 2 lexical conventions

***** 2.1 identifiers

***** 2.2 whitespace and comments

***** 2.3 other notations

***** 2.4 datum labels

*** 3 basic concepts

***** 3.1 variables, syntactic keywords, and regions

***** 3.2 disjointness of types

***** 3.3 external representations

***** 3.4 storage model

***** 3.5 proper tail recursion

*** 4 expressions

***** 4.1 primitive expression types

***** 4.2 derived expression types

***** 4.3 macros

*** 5 program structure

***** 5.1 programs

***** 5.2 import declarations

***** 5.3 variable definitions

***** 5.4 syntax definitions

***** 5.5 record-type definitions

***** 5.6 libraries

***** 5.7 the repl

*** 6 standard procedures

***** 6.1 equivalence predicates

***** 6.2 numbers

***** 6.3 booleans

***** 6.4 pairs and lists

***** 6.5 symbols

***** 6.6 characters

***** 6.7 strings

***** 6.8 vectors

***** 6.9 bytevectors

***** 6.10 control features

***** 6.11 exceptions

***** 6.12 environments and evaluation

***** 6.13 input and output

***** 6.14 system interface

*** 7 formal syntax and semantics

***** 7.1 formal syntax

***** 7.2 formal semantics

***** 7.3 derived expression types

*** a standard libraries

*** b standard feature identifiers

*** language changes
