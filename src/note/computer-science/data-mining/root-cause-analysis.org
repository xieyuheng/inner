#+title: root cause analysis

* hotspot

*** data cube

    - attribute
      attribute_value

    - indicator
      indicator_value -- additive

    - itemset (element)
      - set of (attribute, attribute_value)
      - dependent pair

    - cardinality
      - number of attribute_values occured during a time interval

    - data_cube
      - hypercube whose coordinates are attributes
      - taken discrete values
      - values of an attribute might have no structure

    - reduce one dimension
      - reduce a n cube to (n - 1) cube
      - we need additive of indicator_value here
      - might be called "cuboid" but not sub_cube of data_cube
        for a sub_cube is a section of the data_cube

    - API
      data_cube.value : -- indicator, time, itemset -> indicator_value
      - this is the section
      data_cube.cuboid : -- set (attribute) -> data_cube
      - reduce the dimension to length of the set

*** anomaly localization

    - to specify an anomaly of a data_cube,
      we need to give
      1. an indicator
      2. and a time

    - anomaly localization problem :
      - given a data_cube,
        and an anomaly with indicator I, and changing time T,
        itemset A is the cause of the change if
        lambda (time) = data_cube.value (I, time, A)
        changed a lot at time T
      - anomaly localization problem is to
        identify the most potential root cause
      - if a cuboid have anomaly at some time
        we need to find out which of its itemset is the cause
      - a cuboid's anomaly
        might have many itemsets as its root cause

    - the measure of potential root cause
      - root_cause_score measures the potential
        of a subset of elements in a cuboid
        been the root cause of a anomaly
      - the score of elements are non-additive
        score ({e1, e2}) != score ({e1}) + score ({e2})
      - thus we need to calculate and compare
        all subsets for each cuboid in principle.

*** hotspot

    - detect anomaly
    - forecast value of itemset
    - score
    - MCTS
    - hierarchical pruning

*** [todo] searching

    - the space we are searching is?

* (2015) (Joerg Schoenfisch) Using Abduction in Markov Logic Networks for Root Cause Analysis

* (2017) (Joerg Schoenfisch) Root Cause Analysis in IT Infrastructures using Ontologies and Abduction in Markov Logic Networks

* (2018) (Maciej Skorski) Simple Root Cause Analysis by Separable Likelihoods
