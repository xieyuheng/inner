#+title: Diagonalization and self reference

- Author: Raymond Smullyan
- Date: 1994

* 1 Introduction to self-reference

** Part I Quotation and self-reference

*** Use and mention

*** Self-reference using diagonalization

Use jojo to understand the examples here.

Just that, in here we use Polish notation,
instead of Forth's reversed Polish notation,
thus execution goes from right to left.

D (s) := subst [x] [s] [s];

// substitute [x] by [s] in [s]

Note that, identity function is defined as:

id (x) := [x];

And apply can be define as:

apply (x) := x;

[J D x]
D [J D x] = [J D [J D x]]
J D [J D x] = J [J D [J D x]]

X = J [X]
X = J D [J D x] = J [J D [J D x]]

D [D x] = [D [D x]]

*** Normalization

N (s) := [s [s]];

[J N]
N [J N] = [J [N [J N]]]
J N [J N] = J [J N [J N]]

X = J [X]
X = J N [J N] = J [J N [J N]]

N [N] = [N [N]]

- 为什么被称作 "normalization”？
  这与 lambda term 的 normalization 有关吗？

Exercise 1: X = J N [X]

X = J N N [J N N] = J N [J N N [J N N]]
J N N [J N N] = J N [J N N [J N N]] = J [J N N [J N N] [J N N [J N N]]]

Exercise 2: X = N [X]

X = N N [N N] = N [N N [N N]]
N N [N N] = N [N N [N N]] = [N N [N N] [N N [N N]]]

*** One-side quotation

When using jojo as semantic, "One-side quotation" can be understood as
language with first class quotation keyword. (like LISP)

To execute a jojo, the machine read from left,
and break the jojo by the first occur of "*",
push the right part of "*" as quoted program on data stack,
and execute the left part of "*"
(starting from the left end of the left part).

A (s) := * s * s;

A * J A = * J A * J A
J A * J A = J * J A * J A

A * A = * A * A

R (s) := * s s;

R * J R * = * J R * J R *
J R * J R * = J * J R * J R *

R * R * = * R * R *

** Part II Self-reference in a more general setting

这里是用 application 而不是 concatenation 来理解语言的。

这两种都可以作为语义吗？

* 2 Some classical fixed point arguments compared

** Part I Five fixed point arguments

** Part II A unification

** Part III Quasi-diagonalization
