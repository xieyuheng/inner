#+title: epistemology

* causation

* ><

  - aristotle 說
    屬性爲地者會向下運動
    屬性爲火者會向上運動
    現代的嘲笑者說
    這根本沒有說明物體下落的原因
    而只是描述物體的運動
    而 newton 的理論被當作是釋了物體下落的原因
    但是 newton 的理論只是把物體的運動描述的更詳細而已
    之前我能預判石頭會下落
    現在我能預判石頭下落過程中不同時刻的位置
    愛因斯坦的理論 能夠把運動描述的更細緻
    爲什麼有了愛因斯坦的理論之後
    不說牛頓的理論是錯誤的呢
    爲什麼說 aristotle 的理論是錯誤的

  - 有人說牛頓確實描述了蘋果落地的原因
    因爲蘋果受到了力
    力就是原因
    這個力就是萬有引力
    但是 力 只不過是藉以描述現象的概念而已

  - 如此看來
    我們對 aristotle 的物理學 應該持什麼態度呢

  - 爲什麼 牛頓的描述 就算是找到了現象的 '原因'
    而 aristotle 的解釋就不算
    就算我知道了 '因果' 是人之思維習慣
    人用因果來理解所感
    那麼 如何判斷好的理解與壞的理解
    正如程序語言之優劣
    正如數學語言之優劣
    如何判斷好的語言和壞的語言
    判斷好壞 也是人的習慣

  - 因果之習慣來源於 以我爲因
    比如 我打破了那個杯子
    好壞之習慣來源於 抉擇
    比如 我該娶那個女孩兒
    這些習慣使人生存

  - 因果之爲生存
    在於因果使人能夠預判
    好壞之爲生存 更是顯然
    因爲好就等價與 更有利於自己的生存

  - 在這裏 我很難迴避達爾文的理論
    達爾文的理論是超越因果的
    達爾文的理論是對存在與演化的描述

  - 康德說 知識應該謙卑
    在超越感官的命題面前 就應該停下
    進化論是超越感官的
    但是且慢
    進化論之超越因果
    正如牛頓力學之超越因果
    但是我很早就發現了 進化論的非因果性
    但是我沒有發現 牛頓力學的非因果性
    因爲進化論只能對於比我生命週期短很多的其他物種使用

  - 如此看來
    因果的概念 '源' 於 以我爲因
    如此獲得的知識也 '用' 於 我
    我利用進化論的知識來做人工選擇時
    我就是原因
    我利用牛頓力學的知識來製作器械時
    我就是原因

  - 哲學是爲了化解懷疑論和虛無主義
    [以達到有活力的生活]
    哲學之可悲之處在於
    人們很容易忘卻 懷疑論和虛無主義
    [尤其是生活得有活力的人]

  - 倫理學是爲了指導自己的生活

  - 物理知識是爲了用數學構造描述自然
    以獲得可爲我而用的理論
    數學構造中充滿了因果
    因此數學是 以我爲因 的最高體現
    當用一個物理理論用數學構造來描述自然時
    我們就有因果的知識
    因果的知識可以用於預判
    預判可以爲我所用

  - 知識之謙卑 + '世界' 之紛繁
    這就是數學研究的辯解之一
    [之二就是性愛辯解]
    知識之謙卑 而感知日益更新
    '世界' 之紛繁 而總有未知
    爲此數學家幫助物理學家預備一些數學構造

  - '因果' 與 '我' 的關係
    在 aristotle 的著作里體現得最明顯罷了

* ><

  - 計算機在實現 比如說 算數運算的時候
    既有時間 又有空間 方能完成運算
    '算數知識' 對於計算機而言是 以時間和空間爲前提的

  - 時間和空間 是絕對先驗的嗎
    有可能有不同形式的時間和空間嗎
    - 假設一種智慧生物 他們的質量很大 或者速度很快
      那麼 根據愛因斯坦 時間與空間對於他們來說就可能是完全不同的了
      但是還是有一個 時空
      這個時空還是要用某種幾何來解釋
      確實有先驗的東西 但是這種東西比我們的時空觀念要深刻的多

  - 不相信世界的本體性
    就是不愛生命
    踐行這種不信就導活力喪失與孱弱

* type theory of cause

* ><

  - 性愛類比
    性愛不爲生孩子 而爲了快樂
    數學不爲了應用 而爲了快樂
    什麼是性愛中的快樂
    什麼是數學中的快樂

  - 對力量的追求
    以及對力量的定義
    生命與生命的活力

  - 自然沒有因果
    因果是人類思維的習慣
    人們用因果來描述自然現象
    這種習慣是思維的諸多習慣之一
    [比如另外一個習慣是給東西分類與命名]
    遵循這些習慣而行爲
    就是人們在客觀的自然世界中存在的同時又認識自然
    - 例如如果沒有我的父母就沒有我所設計的程序語言
      但是設計程序語言的是我
      我纔是我所設計的程序語言的 '因'
    - 所謂 '習慣' 如動物之本能
      但是這種本能是人類這個物種所特有的
      並且研究這些習慣的性質
      就是心理學與形而上學的任務
    - 根據 reid
      因果的習慣來源於用人比世界
      因爲人是人主動行爲的 '因'

  - 當想用違反常識的理論來解釋現象時
    要反思設個理論的目的是否有偏頗
    我設計這個理論是否是爲了別的目的 而不是爲了解釋現象
    如果確實如此
    就轉而試着尋找複合常識的理論
    數學就是常識

  - 純粹的唯心倫 說物質世界之不存在
    這是典型的隱修士之復仇

  - 假設我能夠把我的意識上傳到網絡
    使得它作爲一個程序而存在
    這個程序必須有什麼性質 才能有意識和思考

  - 我不能把 一般的哲學論證與對話 用 形式邏輯 來描述
    因此 一般的哲學論證與對話
    遠遠超過 形式邏輯 的範疇
    - 這就是一個 一般的哲學論證與對話 的例子
    - 也許是我的能力不足
    - 我需要更多的例子來判斷形式邏輯在一般推理中的價值
    - ><><><
      關於懷疑外部世界存在 與 聖經和大屠殺

* ><

  - 在道德的譜系中
    尼采所論的是西方道德的起源 與譜系
    而不是東方的
    - 因此道德與社會與文化背景相關

  - 道德一詞現在的意義
    與 道德經 中道德的意義不同
    但是 道德經 確是這兩個字的意義的最重要的建立者

  - 康德關於道德的觀點
    是他跟基本的形而上學觀點的應用
    - 正如斯賓諾莎的 倫理學
      其後半部分是前半部分更形而上的理論之應用
    - 關於 道德 與 科學 之根基的問題
      是形而上學理論的重要應用領域

  - 形而上學 也是 物理後學
    它有兩個問題
    本體論 與 認識論

  - 試着在 at1 中描述七橋問題
    那可能是 at 的應用
    - 這可能要涉及到 isomorphism
      即 嵌入在空間中的子拓撲空間

  - 數學的認識論[數學知識之意義]可能不來源與物理和藝術
    而來源於 '去認識' 這一習慣
    這個習慣是人的意識之本性
    違背它正如苦修士之禁慾

  - 我們不需要一個 在其中只有同倫形變是可能的系統
    才能去實用我們的代數拓撲學知識
    我們只要找到這樣一個系統
    在其中同倫形變是較易發生的
    而非同倫的形變是需要耗費更多 '能量' 的
    並且我們能夠把形變的性質與它所耗費的 '能量' 聯繫起來

* >< 'form vs subtance' just as 'typeclass vs type'

* >< type of causes of aristotle

* >< 對笛卡爾的另一個反駁

  - 維特根斯坦之 沒有私人語言
    所以 笛卡爾 的
    從我的認知開始 構建外部世界的知識之過程
    是沒有起點的

  - 語言的規則來源於共識與慣例
    這些語言規則只能在人羣中產生
    而不能私人

  - rule is to be follwoed

  - 私人語言之不存
    要以歸謬法來證明

* ><

  - 守護常識的觀點 容易被保守派利用
    常識來源於習慣與既成事實

  - 我們應該如何使用常識
    又應該如何使用懷疑

* >< 構造主義與經驗主義

  - 構造主義 有點類似 經驗主義
    因爲它說 所有抽象的結構都應該有例子
    正如經驗主義說 所有抽象的觀念都可劃歸到經驗

* >< 語言的幾何

  - 形式語言的 syntax rule 可以形成一個幾何
    自然語言也一樣 只不過其幾何要複雜的多
    [一點小的變化 就可以一句話意義全變 甚至沒有意義]

  - 即便是就 形式語言 來講
    其語法的幾何也與語義的幾何不同

* >< 抽象與分類

  - 抽象 發現相似
    分類 發現不同

* >< 語言行爲的充分前提

  - 人類的語言行爲
    是人們主動地解釋 對想象的公共編碼
    [此處解釋 是從語言到想象]
    [程序語言之解釋 是從語言到機器之運行]

  - 假設人類大腦里有一個解釋器
    在一個人學會一個語言之前和之後
    這個解釋器的運行方式不同

  - 因此 真的想要用程序來實現這個解釋器的話
    就需要讓這個程序有學習能力

  - 運行這個解釋器的機器的語言能力
    就體現在它對語言的解釋上
    然而 人類語言的解釋是思想
    別人的思想是沒法觀察的

  - 試想教機器一個程序語言
    在某個程序語言的解釋器里
    通過定義新的函數與語法
    我可以慢慢提高這個機器的 '語言能力'

  - 爲什麼我不能說這個跑着一個簡單解釋器的機器是智慧的呢
    因爲它不主動嗎
    要知道 教小孩學習語言也是要有章法的
    只不過在教機器的時候 我非常有章法罷了

  - 假設一個跑着某個簡單解釋器的機器
    能夠主動在網絡上搜索大量的用各種語言寫的程序代碼
    它需要什麼能里才能主動利用這些信息 來豐富自己的語法與函數
    使得自己也能寫出來用各種語言寫出來的程序

  - 如果說語言只有在一個社會中才能產生
    那就讓一羣各種各樣的程序語言的解釋器相互學習理解並交流

* >< 爲什麼主觀意志是無法被解釋的

  - 因爲 所有的解釋都要用因果
    而 因果起源於主觀意志
    主觀意志就是絕對的因

* methodology

*** a method is a program ran by people

    - methodology is the study of the programs ran by people

*** about history

    - aristotle ::
         knowing as traveling.
         phainomena and endoxa form the topos to start.
         a dialectic is a path.

    - descartes ::
         a fresh start from yourself.

* a hypothese about math language and math knowledge

  - all math knowledge can be made intuitve,
    by a better way to express them [a better language].

* 歷史學中的構擬也是一種構造

  - 並且這可能 構造主義 在歷史學中的唯一體現方式

* 關於層次

  - 底層的基本元素可以簡單而重複
    但是高層的合成元素卻可以有不同的類型與處理函數
    高層的合成元素可以被重新 '本體化'

* the type of knowledge

  - aristotle 給知識分類
    但是爲了實現程序語言 我不可能單尋一類
    而必須要從高處的哲學原理 到底層的工程實踐
    融會貫通 不偏不倚

* 斯賓諾莎

  - 倫理學開頭的定義
    利用了 因果
    以自然爲因
    而形成倫理學
    我也可以 用 以我爲因 的知識論
    來形成倫理學

  - 注意
    斯賓諾莎的歷史背景
    知識 權威 宗教之間的戰爭 宗教與科學的紛爭
    如果想要形成一個形而上學和論理學
    我的歷史背景[當前背景]又是什麼呢

  - 一元倫 類似 化時間與空間爲時空
    決定論 類似 向不同的座標投影
    一元倫 之 一體二元
    類似於 'type as proposition' 與 'function as proof'

  - 注意
    我用所用的是數學語言
    只是維特根斯坦意義上的各種語言遊戲中的一種
    而斯賓諾莎的是猶太教的語言

* 對學習本身的觀察

  - x ::
       我觀察到我不想繼續讀這本書
       可能是因爲 我不喜歡它語言
       即我認爲他的語言不是描述這些理論的好的語言
       也可能因爲 我的閱讀環境不夠舒適

  - k ::
       但是
       首先 喜愛一個語言 無異於熟悉與否
       假設這種語言對於描述這些理論來說 真的不高效
       那麼批判其低效就是你的任務了
       何必要停止閱讀呢
       其次 環境會影響心境 心境也能壓制環境的影響
       堅持閱讀可能就會達到適宜的心境
       因爲人之靈魂可適應感受

* 古典數學語言

  - 古典數學語言 有用
    但是 爲了對這些理論有更好的理解 古典語言更值得批判
    所謂古典語言 就是集合論統治的語言
    要強調數學語言的層次

  - 同樣 對於構造主義而言
    古典的分析也是有用的
    正確的態度是 要強調 構造性的層次

  - 觀察出各種 數學語言的 相似與差異
    觀察出各種 可構造性的 相似與差異

  - 可構造性的層次顯然是以機器爲視角來定義的
    比如 bishop 的基本分類
    正如知識的層次可以以人的視角來定義
    比如
    命題可否被經驗驗證
    命題可否被經驗直接驗證
    假設引力的存在 可以更好地解釋某些物體的運動
    假設上帝的存在 可以更好地解釋某羣人類的活動
    後者中的假設 其實並非是 上帝存在 而是這羣人相信上帝存在

* 簡單的知識論

  - 因果起源於 以我爲因
    獲得知識 以 爲我所用

* 獲得知識 以 爲我所用 可能是不正確的

  - 因果起源於 以我爲因 是正確的
    獲得知識 以 爲我所用 可能是不正確的

  - ><><><
    感覺上是不正確的
    但是爲什麼
    也許因爲對 '用' 的定義可以任意泛化

* 類型論對知識論的衝擊

  - 知識的形式是否只是因果
    例如
    - 分類
    - 結構
    但是注意
    用類型系統來表達我們關於函數的知識的時候
    因果被劃歸到了類型中
    因果 是特殊的類型
    所有的知識都是類型

  - 顯然上面所說的 '所有的知識'
    是有問題的
    因爲我們有關程序的知識不光只是用函數的類型來表達的
    但是
    也許 理想的程序語言中
    所有關於函數的知識都可以用類型來表達

  - 注意上面所說的 '知識'
    是有類型的
    即 有關函數的
    這種類型的只是可能是很侷限的
    也可能不侷限
    也可能最終所有類型的知識都可以劃歸到 有關函數的知識

* 衝擊的加劇

  - 如果把程序語言中的現象 類比到知識論與其他哲學門類中

  - 比如程序語言中對等詞的處理
    某些語言中必須要有一個基本等詞
    而其他語言中可以對不同類型的數據賦予不同等詞

* 用斯賓諾莎的倫理學一書做一些語言學實驗

* on denoting by russell 1905

  - meaning denotes denotation.
    meaning is the way we construct an object [as in functional language],
    or the way we limit our searching for certain object [as in logic language].
    denotation is object to be constructed [as in functional language],
    or found [as in logic language].

* >< how the knowledge about programming language is important

* 排中律

  1. aristotle 對排中律的消極證明
     有意義的論斷 一定假設排中律
  2. bishop 構造主義對排中律的駁斥
     排中律對存在性的證明有違常識 並且缺少意義
  3. 東方思想之無排中律
     語言的歧義性

* type theory of aristotle

*** type of cause

*** type of being

* aristotle on force

  - Force can only occur, when a substance is actuallizing
    some kind of its potential.

* form and matter of aristotle and plato

  - Matter is the structure that capable of changing,
    while form is the invariant of the structure.

  - A direction can be setup for the changing.

  - To maximize certain measure can functioned as a direction.
    For example, the flourishing of man.

  - Certain invariant [i.e. form] of a structure
    might be the condition of certain functionality of the structure,
    and enable certain functionality of the structure.
    For example, the rationality of man,
    the sensation of animal,
    the nutrition of vegetable.

  - Accident might happen during a directed changing.

* hermeneutic circle for code reading

  - one's understanding of the text as a whole
    is established by reference to the individual parts
    and one's understanding of each individual part by reference to the whole.

  - but in programming language,
    one's understanding of a program as a whole,
    can be independent of the code of certain language,
    by imagine how the whole program should run.
    and the context needed to understand of each individual part of the code
    is always limited, and this indeed is how the complexity of the code,
    measured by how hard it is to understand the code,
    is control by program language art.

* naturalism

  - to be a methodological naturalism is trying to universalize a methodology,
    which is the way taken by pragmatism.

  - pragmatism's methodology is about the use of experiment.

* understanding type system of a programming language

*** with kant

    - different kinds of knowledge about program
      1. type
         before run the program
         useful to optimize the program
         rewrite the program by hand [or another program]
         to make the program better
      2. test
         after run the program

    - type-checking need to run some functions
      but not the function been typed
      [dependent-type system]

    - Without any functions the a type is not useful,
      [knowledge] [knowledge a posteriori]

      while without any functions we still have the rules for type-checking.
      [pure knowledge] [knowledge a priori] [math without examples]

    - concepts without percepts are empty,
      percepts without concepts are blind.

*** with spinoza

    - type and function are mixed in dependent-type system,
      and they are in harmony.

*** types of type systems

    - we type things by the kinks of functions we can apply on them
      thus type is encoded by the interface functions

    - while 'space as type' is quite different
      in which the type is encoded by constructors

* 靈魂的類比

  | 靈魂       | 肉體       | 二元論                       |
  |------------+------------+------------------------------|
  | 代碼       | 程序       | 性質差異                     |
  |            |            | 反編譯的困難                 |
  |            |            | 同一份代碼被不同的解釋器解釋 |
  |            |            | 同一份代碼被編譯給不同的機器 |
  |------------+------------+------------------------------|
  | 程序[信息] | 機器[載體] | 性質差異                     |
  |            |            | 超越載體之可能性             |

  - 作爲一個運行着程序的載體
    如何才能獲得有關程序本身的知識?
    by transcendental argument

* >< critique of arithmeticalization of infinit analysis

  - arithmeticalization of infinit analysis
    is also arithmetization of space

  - also a critique of the axiom of topology

  - analysis is arithmeticalization of calculus,
    which goes for rigorous ><><>< power.

    - why we have the arithmeticalization of calculus?
      how avoid it?

  - many ideas of analysis could be understood completely
    without need for the concept of a distance function.

  - thus the axioms of topology.

  - E.B. '沒有力量的數學是病態的'

  - 想要學微積分就看牛頓和歐拉
    想要學微分幾何就看高斯和黎曼

  - 沒有 topology 的公理
    還如何捕捉各種模型中的連續性

* 測地線

  - 人們在自己的空間中會體會到空間的測地線
    人們有能力想象別樣的空間中的測地線

  - 但是人們想象高維的能力確實侷限於 *經驗*
    受限於人類感官的構造
    受限與人類發展與學習的方式
    如此說來
    就成了休謨的經驗主義

  - 人們對空間的知識
    確實是可以被經驗改變的 [感官剝奪 導致空間降維]
    正如藝術可以去發現和創造新的經驗

  - 知識來源於感知
    但是感知需要被想像力綜合

  - neo-kant

* 哲學的目的

  - 哲學的目的 是爲了指導生活於學習
